{
  "version": 3,
  "sources": ["../../click-outside-vue3/src/v-click-outside.js", "../../click-outside-vue3/src/index.js"],
  "sourcesContent": ["/**\n * Modified for Vue 3 from https://github.com/ndelvalle/v-click-outside\n * Cf. https://github.com/ndelvalle/v-click-outside/issues/238\n */\nconst HANDLERS_PROPERTY = \"__v-click-outside\";\nconst HAS_WINDOWS = typeof window !== \"undefined\";\nconst HAS_NAVIGATOR = typeof navigator !== \"undefined\";\nconst IS_TOUCH =\n  HAS_WINDOWS &&\n  (\"ontouchstart\" in window ||\n    (HAS_NAVIGATOR && navigator.msMaxTouchPoints > 0));\nconst EVENTS = IS_TOUCH ? [\"touchstart\"] : [\"click\"];\nconst processDirectiveArguments = (bindingValue) => {\n  const isFunction = typeof bindingValue === \"function\";\n  if (!isFunction && typeof bindingValue !== \"object\") {\n    throw new Error(\n      \"v-click-outside: Binding value must be a function or an object\"\n    );\n  }\n  return {\n    handler: isFunction ? bindingValue : bindingValue.handler,\n    middleware: bindingValue.middleware || ((item) => item),\n    events: bindingValue.events || EVENTS,\n    isActive: !(bindingValue.isActive === false),\n    detectIframe: !(bindingValue.detectIframe === false),\n    capture: Boolean(bindingValue.capture),\n  };\n};\nconst execHandler = ({ event, handler, middleware }) => {\n  if (middleware(event)) {\n    handler(event);\n  }\n};\nconst onFauxIframeClick = ({ el, event, handler, middleware }) => {\n  // Note: on firefox clicking on iframe triggers blur, but only on\n  //       next event loop it becomes document.activeElement\n  // https://stackoverflow.com/q/2381336#comment61192398_23231136\n  setTimeout(() => {\n    const { activeElement } = document;\n    if (\n      activeElement &&\n      activeElement.tagName === \"IFRAME\" &&\n      !el.contains(activeElement)\n    ) {\n      execHandler({ event, handler, middleware });\n    }\n  }, 0);\n};\nconst onEvent = ({ el, event, handler, middleware }) => {\n  // Note: composedPath is not supported on IE and Edge, more information here:\n  //       https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath\n  //       In the meanwhile, we are using el.contains for those browsers, not\n  //       the ideal solution, but using IE or EDGE is not ideal either.\n  const path = event.path || (event.composedPath && event.composedPath());\n  const isClickOutside = path\n    ? path.indexOf(el) < 0\n    : !el.contains(event.target);\n  if (!isClickOutside) {\n    return;\n  }\n  execHandler({ event, handler, middleware });\n};\nconst beforeMount = (el, { value }) => {\n  const {\n    events,\n    handler,\n    middleware,\n    isActive,\n    detectIframe,\n    capture,\n  } = processDirectiveArguments(value);\n  if (!isActive) {\n    return;\n  }\n  el[HANDLERS_PROPERTY] = events.map((eventName) => ({\n    event: eventName,\n    srcTarget: document.documentElement,\n    handler: (event) => onEvent({ el, event, handler, middleware }),\n    capture,\n  }));\n  if (detectIframe) {\n    const detectIframeEvent = {\n      event: \"blur\",\n      srcTarget: window,\n      handler: (event) => onFauxIframeClick({ el, event, handler, middleware }),\n      capture,\n    };\n    el[HANDLERS_PROPERTY] = [...el[HANDLERS_PROPERTY], detectIframeEvent];\n  }\n  el[HANDLERS_PROPERTY].forEach(({ event, srcTarget, handler: thisHandler }) =>\n    setTimeout(() => {\n      // Note: More info about this implementation can be found here:\n      //       https://github.com/ndelvalle/v-click-outside/issues/137\n      if (!el[HANDLERS_PROPERTY]) {\n        return;\n      }\n      srcTarget.addEventListener(event, thisHandler, capture);\n    }, 0)\n  );\n};\nconst unmounted = (el) => {\n  const handlers = el[HANDLERS_PROPERTY] || [];\n  handlers.forEach(({ event, srcTarget, handler, capture }) =>\n    srcTarget.removeEventListener(event, handler, capture)\n  );\n  delete el[HANDLERS_PROPERTY];\n};\nconst updated = (el, { value, oldValue }) => {\n  if (JSON.stringify(value) === JSON.stringify(oldValue)) {\n    return;\n  }\n  unmounted(el);\n  beforeMount(el, { value });\n};\nconst directive = {\n  beforeMount,\n  updated,\n  unmounted,\n};\nexport default HAS_WINDOWS ? directive : {};\n", "import directive from './v-click-outside'\n\nconst plugin = {\n  install(Vue) {\n    Vue.directive('click-outside', directive)\n  },\n  directive,\n}\n\nexport default plugin\n"],
  "mappings": ";;;;;;;;;;6DAIMA,QAAoB,IAAA,eACpBC,OAAgC,WAAA,IAAA,MAAXC,kBACgB,UAAA,KAAdC,UAKvBC,mBAFH,KAAA,CAAA,YACEC,IAAiBF,CAAAA,OAAAA,GAAUG,IAAAA,SAAAA,IAAAA;AAAAA,YAAmBC,KACxBC,GAAA,OAAAC,KAAAD,GAAA;AAAiB,SAAA,GAAAA,GAiBtCE,YAAcH,EAAA,KAAAE,GAAGE,EAAAA;MAAAA,GAAAA,IAAAA,SAAOC,IAAAA,IAAAA;AAAAA,YACxBC,KADiCA,SAAAA,IAAAA;AACtBF,cACbC,KAAQD,cAgCQ,OAACG;AAAAA,cAAAA,CAAAA,MAlDa,YAChC,OAA2CN;AAAA,kBAAA,IAAA,MAAjBO,gEAGtB;AAAA,iBAAA,EAAA,SAAAR,KAAAC,KAAAA,GAAA,SAAA,YAAAA,GAAA,cAIFI,SAAqCG,IAAaH;AAAAA,mBAClDC;UAAAA,GAAAA,QAAAA,GAAYE,UAAaF,GAAAA,UAAe,EAAA,UAACG,GAAAA,WACzCC,cAAqBA,EAAUb,UAC/Bc,GAAAA,eAAyBA,SACzBC,QAAAA,GAAAA,OAA8C,EAAA;QAAA,EAA9BJ,GAAaI,KAAAA,GAAAA,KAAAA,GAAAA,SAC7BC,KAASC,GAAAA,YAAqBD,IAAAA,GAAAA,cAwC9BR,IAAAA,GAAAA;AACAC,YAAAA,GAAAA,UAAAA;AAEAM,cAAAA,GAAAA,KAAAA,GAAAA,OACAC,IAAAA,SAEFZ,IAAA;AAAA,mBAJEU,EAAAA,OAaFV,IANAM,WAVEG,SAUiC,iBAAgB,SAC1CK,SACPC,IAAWC;AAAAA,qBAAAA,SAASC,IAAAA;AAAAA,oBAAAA,KACpBb,GAAAA,IAAAA,KAASJ,GAAA,OAAAkB,KAACf,GAAAA,SA7BEgB,KAAAnB,GAAA,YAAGM,KAAAA,GAAAA,QAAIH,GAAAA,gBAAOC,GAAAA,aAASC;AAAAA,iBAK/Be,KAAOjB,GAAMiB,QAAeC,EAAAA,IAAAA,IAAAA,CAAAA,GAAAA,SAAsBA,GAAAA,MAAAA,MAAAA,EAAAA,EACjCD,OACdE,IAAAA,SAAcJ,IAClBZ,YAAYH,GAAAA,CAAMoB;cAAAA,EAAAA,EAAAA,IAAAA,IAAAA,OAITpB,IAAAA,SAAOC,IAAAA,YAASC,GAAAA,CAAAA;YAAAA,GAAAA,SAiBEC,EAAAA;UAAIH,CAAAA,GAAAA,GAAAA;AAAAA,gBAAOC,IAAAA,EAAAA,OAASC,QAAAA,WAClDO,QAAAA,SAGA,SACET,IAAAA;AAAO,qBACPY,SAAAA,IAAWrB;AAAAA,oBAAAA,KACXU,GAAAA,IAAAA,KAASJ,GAAA,OAAAkB,KAACf,GAAAA,SAnDUgB,KAAAnB,GAAA;AAAGM,2BAAIH,WAAOC;AAAAA,sBAAAA,KAAAA,SAASC;AAI/CmB,kBAAAA,MAAAA,aAAWxB,GAAA,WACiBgB,CAAAA,GAAAA,SAAlBS,EAAAA,KAAAA,EAAAA,EAENA,OAC0BxB,IAAA,SAAZyB,IAAAA,YACVC,GAAAA,CAAAA;gBAAAA,GAAAA,CAAAA;cAAAA,EAASF,EAAAA,IAEbvB,IAAcC,OAAAA,IAAOC,SAAAA,IAASC,YAAAA,GAAAA,CAAAA;YAAAA,GAE/B,SAsCyCC,EAAAA;AAAIH,YAAAA,GAAAA,KAAAA,CAAAA,EAAOC,OAAAA,GAASC,IAAAA,CAAAA,CAAAA,CAAAA;UAAAA;AAAAA,UAAAA,GAAAA,GAAAA,QAC5DO,SAECpB,IAAAA;AAAAA,gBAAAA,KAAAA,GAAAA,OAA4BA,KAAoBoC,GAAAA,WAE/BC,KAAAA,GAAQ;AAAA,mBAAA,WAAUd,WAAAA;AAAAA,cAAAA,GAAAA,MAAoBe,GAAT1B,iBACjDoB,IAAAA,IAAAA,CAAAA;YAAAA,GAAW,CAAA;UAAA,CAAA;QAAA;MAAA,GAAA,IAAA,SAMTT,IAAUgB;AAAAA,SAAAA,GAAAA,MAAAA,CAAAA,GAAAA,QAAqCnB,SAC9CZ,IAGDgC;AAAAA,iBAAYhC,GAAA,UACIR,oBACHQ,GAAA,OAAAA,GAAA,SAAUe,GAAAA,OACfkB;QAAAA,CAAAA,GAAAA,OAAAA,GAAAA;MAAAA,GAAAA,IADQ9B,IAAAA,EAAAA,aAAkBC,GAAAA,SAASQ,SAAAA,IAGxCN,IAAGd;AAAAA,YAAAA,KAcGC,GAJbyC,OAAAA,KAAAA,GAAAA;AACAC,aATc,UAAC7B,EAAAA,MAAAA,KAAM8B,UAAOC,EAAAA,MAAAA,EAAAA,EAAAA,GACxBC,EAAAA,IAAKC,EAAAA,OAAAA,GAAAA,CAAAA;MAAUH,GAAAA,WAAgBG,EAAAA,IAAAA,CAAAA;AAAAA,aAGnCP,EAAAA,SACgB,SAAEI,IAAAA;AAAAA,QAAAA,GAKlBJ,UAAAA,iBClHAQ,CAAAA;MAAAA,GAAAA,WAAQC,EAAAA;IACNA,CAAAA;;;",
  "names": ["HANDLERS_PROPERTY", "HAS_WINDOWS", "window", "navigator", "EVENTS", "HAS_NAVIGATOR", "msMaxTouchPoints", "n", "e", "t", "execHandler", "event", "handler", "middleware", "el", "bindingValue", "item", "events", "isActive", "detectIframe", "capture", "Boolean", "eventName", "srcTarget", "document", "documentElement", "r", "a", "path", "composedPath", "indexOf", "target", "setTimeout", "activeElement", "tagName", "contains", "detectIframeEvent", "forEach", "thisHandler", "addEventListener", "unmounted", "removeEventListener", "beforeMount", "updated", "value", "oldValue", "JSON", "stringify", "install", "Vue"]
}
